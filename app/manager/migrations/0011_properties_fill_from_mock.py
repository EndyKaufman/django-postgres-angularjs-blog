# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-06-01 09:21
from __future__ import unicode_literals

from django.db import migrations
import json
from project import helpers, settings


def fill_files_from_mock(apps, schema_editor):
    helpers.mkdir_recursive(settings.MEDIA_ROOT)
    helpers.copy_dir_recursive('mock/manager/properties_0011/file/media', settings.MEDIA_ROOT)
    try:
        with open('mock/manager/properties_0011/file/list.json') as f:
            content = f.read()
            f.close()
    except IOError:
        content = '[]'
    records = json.loads(content)

    File = apps.get_model("file", "File")

    for record in records:
        file, created = File.objects.get_or_create(src=record['src'])
        file.comment = record['comment']
        file.save()

def fill_from_mock(apps, schema_editor):
    try:
        with open('mock/manager/properties_0011/list.json') as f:
            content = f.read()
            f.close()
    except IOError:
        content = '[]'
    records = json.loads(content)

    Properties = apps.get_model("manager", "Properties")
    for record in records:
        record = helpers.set_null_values_if_not_exist(record, ['name', 'value', 'comment', 'only_update'])
        item, created = Properties.objects.get_or_create(name=record['name'])
        item.value = record['value']
        item.comment = record['comment']

        fields = ['comment', 'value']
        for (lang, title) in settings.LANGUAGES:
            for field in fields:
                setattr(item, '%s_%s' % (field, lang), getattr(item, field))

        item.only_update = record['only_update']
        item.save()


class Migration(migrations.Migration):

    dependencies = [
        ('manager', '0010_add_translated_fields'),
    ]

    operations = [
        migrations.RunPython(fill_files_from_mock),
        migrations.RunPython(fill_from_mock),
    ]
