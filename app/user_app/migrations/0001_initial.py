# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-05-15 12:35
from __future__ import unicode_literals

from django.db import migrations
import json
from django.utils.timezone import now, timedelta
from django.utils import timezone


def fill_from_mock(apps, schema_editor):
    try:
        with open('mock/user_app/list.json') as f:
            content = f.read()
            f.close()
    except IOError:
        content = '[]'
    records = json.loads(content)

    from oauth2_provider.models import get_application_model, AccessToken, RefreshToken

    for record in records:
        item, created = get_application_model().objects.get_or_create(client_id=record['client_id'],
                                                                      user_id=record['user_id'],
                                                                      redirect_uris=record['redirect_uris'],
                                                                      client_type=record['client_type'],
                                                                      authorization_grant_type=record[
                                                                          'authorization_grant_type'],
                                                                      client_secret=record['client_secret'],
                                                                      name=record['name'],
                                                                      skip_authorization=record['skip_authorization'])
        tokens = record['tokens']
        for token in tokens:
            item_token, created_token = AccessToken.objects.get_or_create(token=token['token'],
                                                                          scope=token['scope'],
                                                                          application=item,
                                                                          user_id=token['user_id'],
                                                                          expires=(now() + timedelta(days=365)))
            refresh_tokens = token['refresh_tokens']
            for refresh_token in refresh_tokens:
                item_refresh_token, created_refresh_token = RefreshToken.objects.get_or_create(
                    token=refresh_token['token'],
                    access_token=item_token,
                    application=item,
                    user_id=refresh_token['user_id'])


class Migration(migrations.Migration):
    dependencies = [
    ]

    operations = [
        migrations.RunPython(fill_from_mock),
    ]
